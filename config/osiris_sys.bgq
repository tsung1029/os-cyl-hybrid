################################################################################
# System specific configuration for osiris make.
#   System:   BlueGene/Q
################################################################################


# Uncomment the following to enable parallel I/O
# PARALLEL_IO = __PARALLEL_IO__ 

# Set the following to a system optimized timer, or leave commented to use a default one
# The BlueGene timers are used automatically

# SIMD
# Uncomment the following line to use SIMD optimized code 
SIMD = BGQ

# Precision
# In BlueGene/P systems use of single precision code is actually slower, use only
# if using less memory is required
PRECISION = DOUBLE

# Restart I/O backend
# Uncomment the following to use SION as the restart io 
RST_IO = __RST_SION__

# VERSION
# Uncomment to override the default version text (prepend bgq-)
VERSION = bgq-r$(shell svnversion -c ../source/ | awk -F: '{ print $$2 }' )


#compilers
##########
FPP = gcc -C -E -x assembler-with-cpp -D__bgq__ -D_OPENMP

cc = mpixlc_r
CC = mpixlC_r
F90 = mpixlf95_r 

MAKE = gmake
ECHO = /bin/echo

# Use PAPI profiling
# FPP += -D__USE_PAPI__
# OBJSLOG += os-logprof-papi.o 

# Testing routines
# OBJS += test-bgp.o

# Fortran flags
###############

F90FLAGS_all = -qsuppress=1506-234 -qsuffix=cpp=f90 -qarch=qp \
               -qsmp=omp -qnosave -qnoescape

# Production
F90FLAGS_production =  $(F90FLAGS_all) -O4 -qmaxmem=-1 -qalias=nopteovrlp -qnocheck \
                       -qtune=qp -qfloat=rsqrt:hssngl:fltint


# Profile 
#F90FLAGS_profile    = $(F90FLAGS_production) -g -pg -qfullpath 
F90FLAGS_profile    = $(F90FLAGS_all) -O2 -g -pg -qfullpath 


# Debug
# Don't compile with -O2, it triggers some inexistent fp exceptions in cathode

F90FLAGS_debug      = $(F90FLAGS_all) -O0 -g -C -qsmallstack -qinit=f90ptr \
                      -qflttrap=invalid:underflow:nanq:zerodivide:enable -qsigtrap \
                      -qsuppress=1518-061:1518-051 \
                      -qinitauto=FF

F90FLAGS_debug = $(F90FLAGS_all) -O2

# C flags
#########

CFLAGS_debug = -O2 -g -qfullpath

CFLAGS_production = -O4 -qmaxmem=-1 -qprefetch -qarch=qp -qtune=qp

#CFLAGS_profile = $(CFLAGS_production) -g -pg -qfullpath     
CFLAGS_profile = -O2 -g -pg -qfullpath     

# Linker flags
##############
LDFLAGS = -g -qfullpath

# LDFLAGS_profile = -g -pg -qfullpath     

# Link convention
#################
UNDERSCORE = FORTRANNOUNDERSCORE

# Libraries
###########

HDF5=/bgsys/local/hdf5/v1.8.9
ZLIB=/bgsys/local/zlib/v1.2.5
SZIP=/bgsys/local/szip/v2.1

H5_FCOMPILEFLAGS=-I$(HDF5)/include
H5_FLINKFLAGS=-L$(HDF5)/lib -lhdf5hl_fortran -lhdf5_hl -lhdf5_fortran \
              -lhdf5 -L$(ZLIB)/lib -L$(SZIP)/lib -lsz -lz -lm \
              -Wl,-rpath -Wl,$(HDF5)/lib

# SIONlib support
# this requires doing 'module load sionlib'
ifeq ("$(RST_IO)","__RST_SION__")
  LDFLAGS += -L$(SIONLIB_ROOT)/lib -lsion_64 -lsionser_64
endif



# Use PAPI profiling
#####################################################
# FPP     += -D__USE_PAPI__
# CFLAGS  += -I/bgsys/local/papi/4.0.0/include
# OBJSLOG += os-logprof-papi.o 
# LDFLAGS += -L/bgsys/local/papi/4.0.0/lib -lpapi
